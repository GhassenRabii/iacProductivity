AWSTemplateFormatVersion: '2010-09-09'
Description: VPC, subnets, NAT, and route tables for Django app stack v2

Parameters:
  VpcCidr:
    Type: String
    Default: 10.10.0.0/16
    Description: The CIDR block for the VPC

  PublicSubnet1Cidr:
    Type: String
    Default: 10.10.1.0/24
    Description: Public subnet 1 CIDR

  PublicSubnet2Cidr:
    Type: String
    Default: 10.10.2.0/24
    Description: Public subnet 2 CIDR

  PrivateSubnet1Cidr:
    Type: String
    Default: 10.10.101.0/24
    Description: Private subnet 1 CIDR

  PrivateSubnet2Cidr:
    Type: String
    Default: 10.10.102.0/24
    Description: Private subnet 2 CIDR




Resources:

  MyVPCv2:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: DjangoVPCv2

  MyInternetGatewayv2:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: DjangoIGWv2

  AttachGatewayv2:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPCv2
      InternetGatewayId: !Ref MyInternetGatewayv2

  PublicSubnet1v2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPCv2
      CidrBlock: !Ref PublicSubnet1Cidr
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: DjangoPublicSubnet1v2

  PublicSubnet2v2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPCv2
      CidrBlock: !Ref PublicSubnet2Cidr
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: DjangoPublicSubnet2v2

  PrivateSubnet1v2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPCv2
      CidrBlock: !Ref PrivateSubnet1Cidr
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: DjangoPrivateSubnet1v2

  PrivateSubnet2v2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPCv2
      CidrBlock: !Ref PrivateSubnet2Cidr
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: DjangoPrivateSubnet2v2

  EIPForNATv2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATGatewayv2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPForNATv2.AllocationId
      SubnetId: !Ref PublicSubnet1v2
      Tags:
        - Key: Name
          Value: DjangoNATGatewayv2

  PublicRouteTablev2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPCv2
      Tags:
        - Key: Name
          Value: DjangoPublicRouteTablev2

  PublicRoutev2:
    Type: AWS::EC2::Route
    DependsOn: AttachGatewayv2
    Properties:
      RouteTableId: !Ref PublicRouteTablev2
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGatewayv2

  PublicSubnet1RouteTableAssociationv2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1v2
      RouteTableId: !Ref PublicRouteTablev2

  PublicSubnet2RouteTableAssociationv2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2v2
      RouteTableId: !Ref PublicRouteTablev2

  PrivateRouteTable1v2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPCv2
      Tags:
        - Key: Name
          Value: DjangoPrivateRouteTable1v2

  PrivateRouteTable2v2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPCv2
      Tags:
        - Key: Name
          Value: DjangoPrivateRouteTable2v2

  PrivateSubnet1RouteTableAssociationv2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1v2
      RouteTableId: !Ref PrivateRouteTable1v2

  PrivateSubnet2RouteTableAssociationv2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2v2
      RouteTableId: !Ref PrivateRouteTable2v2

  PrivateRoute1v2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1v2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayv2

  PrivateRoute2v2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2v2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayv2

Outputs:
  MyVPCv2:
    Description: VPC ID
    Value: !Ref MyVPCv2
    Export:
      Name: MyVPCv2

  PublicSubnet1v2:
    Description: Public Subnet 1
    Value: !Ref PublicSubnet1v2
    Export:
      Name: MyPublicSubnet1v2

  PublicSubnet2v2:
    Description: Public Subnet 2
    Value: !Ref PublicSubnet2v2
    Export:
      Name: MyPublicSubnet2v2

  PrivateSubnet1v2:
    Description: Private Subnet 1
    Value: !Ref PrivateSubnet1v2
    Export:
      Name: MyPrivateSubnet1v2

  PrivateSubnet2v2:
    Description: Private Subnet 2
    Value: !Ref PrivateSubnet2v2
    Export:
      Name: MyPrivateSubnet2v2

